{"author":"Team: Aspyn Palatnick, Cem Ozer, Yorke Rhodes","title":"Partial-Lock-Commit-Reveal Voting scheme with ERC20 tokens","fileName":"/contracts/tcr/PLCRVoting.sol","name":"PLCRVoting","abi":[{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getTotalNumberOfTokensForWinningOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollVotesFor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_POLL_NONCE","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollVotesAgainst","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_voteQuorum","type":"uint256"},{"name":"_commitDuration","type":"uint256"},{"name":"_revealDuration","type":"uint256"}],"name":"startPoll","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"voteTokenBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"}],"name":"getLastNode","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"revealPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"isPassed","outputs":[{"name":"passed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollVoteQuorum","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"}],"name":"getLockedTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256"},{"name":"_secretHash","type":"bytes32"},{"name":"_numTokens","type":"uint256"},{"name":"_prevPollID","type":"uint256"}],"name":"commitVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"hasBeenRevealed","outputs":[{"name":"revealed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_prevID","type":"uint256"},{"name":"_nextID","type":"uint256"},{"name":"_voter","type":"address"},{"name":"_numTokens","type":"uint256"}],"name":"validPosition","outputs":[{"name":"valid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"pollExists","outputs":[{"name":"exists","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pollNonce","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"rescueTokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_user","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"attrUUID","outputs":[{"name":"uuid","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256"}],"name":"requestVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"commitPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256"},{"name":"_voteOption","type":"uint256"},{"name":"_salt","type":"uint256"}],"name":"revealVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_numTokens","type":"uint256"}],"name":"getInsertPointForNumTokens","outputs":[{"name":"prevNode","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollRevealEndDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"getNumTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"getCommitHash","outputs":[{"name":"commitHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_terminationDate","type":"uint256"}],"name":"isExpired","outputs":[{"name":"expired","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollCommitEndDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256"}],"name":"withdrawVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getTotalNumberOfTokensForLosingOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"pollEnded","outputs":[{"name":"ended","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"},{"name":"_salt","type":"uint256"},{"name":"_overturned","type":"bool"}],"name":"getNumPassingTokens","outputs":[{"name":"correctVotes","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddr","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"}],"name":"VoteCommitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":false,"name":"choice","type":"uint256"}],"name":"VoteRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"voteQuorum","type":"uint256"},{"indexed":false,"name":"commitDuration","type":"uint256"},{"indexed":false,"name":"revealDuration","type":"uint256"},{"indexed":true,"name":"pollID","type":"uint256"}],"name":"PollCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":false,"name":"numTokens","type":"uint256"}],"name":"VotingRightsGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":false,"name":"numTokens","type":"uint256"}],"name":"VotingRightsWithdrawn","type":"event"}],"bin":"6060604052341561000f57600080fd5b6040516020806121bf8339810160405280805190602001909190505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080819055505061213c806100836000396000f300606060405260043610610196576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063053e71a61461019b57806311fadea3146101d25780632173a10f146102095780632e9b12d01461023257806332ed3d60146102695780633b930294146102b2578063427fa1d2146102ff578063441c77c01461034c57806349403183146103875780635f4da610146103c25780636b2d95d4146103f95780636cbf9c5e1461044657806372d8e44214610488578063819b0293146104e257806388d21ff31461054e57806397508f361461058957806397603560146105b2578063a1103f37146105d5578063a25236fe14610633578063a4439dc514610656578063b11d8bb814610691578063c622afb0146106c6578063c9d983e61461071c578063d138209214610753578063d901402b146107a9578063d9548e5314610807578063ddb261b514610842578063e7b1d43c14610879578063e8cfa3f01461089c578063ee684830146108d3578063ee8badd71461090e578063fc0c546a14610978575b600080fd5b34156101a657600080fd5b6101bc60048080359060200190919050506109cd565b6040518082815260200191505060405180910390f35b34156101dd57600080fd5b6101f36004808035906020019091905050610a2e565b6040518082815260200191505060405180910390f35b341561021457600080fd5b61021c610a4e565b6040518082815260200191505060405180910390f35b341561023d57600080fd5b6102536004808035906020019091905050610a53565b6040518082815260200191505060405180910390f35b341561027457600080fd5b61029c6004808035906020019091908035906020019091908035906020019091905050610a73565b6040518082815260200191505060405180910390f35b34156102bd57600080fd5b6102e9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b50565b6040518082815260200191505060405180910390f35b341561030a57600080fd5b610336600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b68565b6040518082815260200191505060405180910390f35b341561035757600080fd5b61036d6004808035906020019091905050610c3b565b604051808215151515815260200191505060405180910390f35b341561039257600080fd5b6103a86004808035906020019091905050610c8a565b604051808215151515815260200191505060405180910390f35b34156103cd57600080fd5b6103e36004808035906020019091905050610d1d565b6040518082815260200191505060405180910390f35b341561040457600080fd5b610430600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d3d565b6040518082815260200191505060405180910390f35b341561045157600080fd5b610486600480803590602001909190803560001916906020019091908035906020019091908035906020019091905050610d58565b005b341561049357600080fd5b6104c8600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611288565b604051808215151515815260200191505060405180910390f35b34156104ed57600080fd5b610534600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611370565b604051808215151515815260200191505060405180910390f35b341561055957600080fd5b61056f60048080359060200190919050506113b4565b604051808215151515815260200191505060405180910390f35b341561059457600080fd5b61059c611448565b6040518082815260200191505060405180910390f35b34156105bd57600080fd5b6105d3600480803590602001909190505061144e565b005b34156105e057600080fd5b610615600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061153d565b60405180826000191660001916815260200191505060405180910390f35b341561063e57600080fd5b61065460048080359060200190919050506115a0565b005b341561066157600080fd5b6106776004808035906020019091905050611839565b604051808215151515815260200191505060405180910390f35b341561069c57600080fd5b6106c46004808035906020019091908035906020019091908035906020019091905050611876565b005b34156106d157600080fd5b610706600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611a60565b6040518082815260200191505060405180910390f35b341561072757600080fd5b61073d6004808035906020019091905050611b7f565b6040518082815260200191505060405180910390f35b341561075e57600080fd5b610793600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611b9f565b6040518082815260200191505060405180910390f35b34156107b457600080fd5b6107e9600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611c7f565b60405180826000191660001916815260200191505060405180910390f35b341561081257600080fd5b6108286004808035906020019091905050611d62565b604051808215151515815260200191505060405180910390f35b341561084d57600080fd5b6108636004808035906020019091905050611d6e565b6040518082815260200191505060405180910390f35b341561088457600080fd5b61089a6004808035906020019091905050611d8e565b005b34156108a757600080fd5b6108bd6004808035906020019091905050611f70565b6040518082815260200191505060405180910390f35b34156108de57600080fd5b6108f46004808035906020019091905050611fd2565b604051808215151515815260200191505060405180910390f35b341561091957600080fd5b610962600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091908035151590602001909190505061200e565b6040518082815260200191505060405180910390f35b341561098357600080fd5b61098b6120ba565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006109d882611fd2565b15156109e357600080fd5b6109ec82610c8a565b15610a0f5760016000838152602001908152602001600020600301549050610a29565b600160008381526020019081526020016000206004015490505b919050565b600060016000838152602001908152602001600020600301549050919050565b600081565b600060016000838152602001908152602001600020600401549050919050565b600060016000540160008190555060a060405190810160405280844201815260200183854201018152602001858152602001600081526020016000815250600160008054815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050506000547fef096063d99f4ef9370b5e89d45025615c869845ca33878d173e8dca429b2be085858560405180848152602001838152602001828152602001935050505060405180910390a260005490509392505050565b60026020528060005260406000206000915090505481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6330fe0a0a909160006040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1515610c1d57600080fd5b5af41515610c2a57600080fd5b505050604051805190509050919050565b6000610c46826113b4565b1515610c5157600080fd5b610c706001600084815260200190815260200160002060010154611d62565b158015610c835750610c8182611839565b155b9050919050565b6000610c946120e0565b610c9d83611fd2565b1515610ca857600080fd5b6001600084815260200190815260200160002060a060405190810160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090508060800151816060015101816040015102816060015160640211915050919050565b600060016000838152602001908152602001600020600201549050919050565b6000610d5182610d4c84610b68565b611b9f565b9050919050565b600080610d6486611839565b1515610d6f57600080fd5b83600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610dbd57600080fd5b60008614151515610dcd57600080fd5b6000831480610ded57506000600102610de63385611c7f565b6000191614155b1515610df857600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6307d29ac99091856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1515610eaa57600080fd5b5af41515610eb757600080fd5b505050604051805190509150858214610ed05781610f9a565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6307d29ac99091886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1515610f8257600080fd5b5af41515610f8f57600080fd5b505050604051805190505b9150610fa883833387611370565b1515610fb357600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__639735c51b90918589866040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085815260200184815260200183815260200182815260200194505050505060006040518083038186803b151561107557600080fd5b5af4151561108257600080fd5b50505061108f338761153d565b9050600473__contracts/tcr/installed_contracts/at__63977aa031909183876040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180848152602001836000191660001916815260200180602001838152602001828103825260098152602001807f6e756d546f6b656e73000000000000000000000000000000000000000000000081525060200194505050505060006040518083038186803b151561114f57600080fd5b5af4151561115c57600080fd5b505050600473__contracts/tcr/installed_contracts/at__63977aa03190918388600190046040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018360001916600019168152602001806020018381526020018281038252600a8152602001807f636f6d6d6974486173680000000000000000000000000000000000000000000081525060200194505050505060006040518083038186803b151561122157600080fd5b5af4151561122e57600080fd5b505050853373ffffffffffffffffffffffffffffffffffffffff167f1d1ce8842c4b2d0eaed42eb6d7732092ca85f0992cae9c760d181efcb0aedf4e866040518082815260200191505060405180910390a3505050505050565b6000611293826113b4565b151561129e57600080fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__63366a5ba29091846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b151561135057600080fd5b5af4151561135d57600080fd5b5050506040518051905015905092915050565b600080600061137f8588611b9f565b841015915061138e8587611b9f565b8411158061139c5750600086145b90508180156113a85750805b92505050949350505050565b600080600060016000858152602001908152602001600020600001549150600160008581526020019081526020016000206001015490506000821480156113fc575060008114155b15151561140557fe5b600082141580156114165750600081145b15151561141f57fe5b600082148061142e5750600081145b1561143c5760009250611441565b600192505b5050919050565b60005481565b61145781611fd2565b151561146257600080fd5b61146c3382611288565b15151561147857600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__636d900ed09091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060006040518083038186803b151561152a57600080fd5b5af4151561153757600080fd5b50505050565b60008282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040518091039020905092915050565b80600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561165d57600080fd5b5af1151561166a57600080fd5b505050604051805190501015151561168157600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b151561177957600080fd5b5af1151561178657600080fd5b50505060405180519050151561179b57600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167f4bdec44a53feb3aabedf51c989ff2b6aebe7369d3974f57c304758a8537281e1826040518082815260200191505060405180910390a250565b6000611844826113b4565b151561184f57600080fd5b61186e6001600084815260200190815260200160002060000154611d62565b159050919050565b600061188184610c3b565b151561188c57600080fd5b6118963385611288565b1515156118a257600080fd5b6118ac3385611c7f565b60001916838360405180838152602001828152602001925050506040518091039020600019161415156118de57600080fd5b6118e83385611b9f565b9050600183141561191c57806001600086815260200190815260200160002060030160008282540192505081905550611941565b8060016000868152602001908152602001600020600401600082825401925050819055505b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__636d900ed09091866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060006040518083038186803b15156119f357600080fd5b5af41515611a0057600080fd5b505050833373ffffffffffffffffffffffffffffffffffffffff167f7f9df012dd015e7e61a4a17ccf8db7fb6afbe211465b5696368d1d6408d033118386604051808381526020018281526020019250505060405180910390a350505050565b6000806000611a6e85610b68565b9150611a7a8583611b9f565b90505b600081141515611b7357611a918583611b9f565b905083811015611aa357819250611b77565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6330fe0a0a9091846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1515611b5557600080fd5b5af41515611b6257600080fd5b505050604051805190509150611a7d565b8192505b505092915050565b600060016000838152602001908152602001600020600101549050919050565b6000600473__contracts/tcr/installed_contracts/at__6350389f5c9091611bc9868661153d565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180838152602001826000191660001916815260200180602001828103825260098152602001807f6e756d546f6b656e730000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b1515611c6057600080fd5b5af41515611c6d57600080fd5b50505060405180519050905092915050565b6000600473__contracts/tcr/installed_contracts/at__6350389f5c9091611ca9868661153d565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018260001916600019168152602001806020018281038252600a8152602001807f636f6d6d69744861736800000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b1515611d4057600080fd5b5af41515611d4d57600080fd5b50505060405180519050600102905092915050565b60008142119050919050565b600060016000838152602001908152602001600020600001549050919050565b6000611d9933610d3d565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054039050818110151515611deb57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515611eaf57600080fd5b5af11515611ebc57600080fd5b505050604051805190501515611ed157600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2c88837e03c4eee367d64fb379bbf7dad76a371c52622230bcf8b79728b9c532836040518082815260200191505060405180910390a25050565b6000611f7b82611fd2565b1515611f8657600080fd5b611f8f82610c8a565b1515611fb35760016000838152602001908152602001600020600301549050611fcd565b600160008381526020019081526020016000206004015490505b919050565b6000611fdd826113b4565b1515611fe857600080fd5b6120076001600084815260200190815260200160002060010154611d62565b9050919050565b60008060008061201d87611fd2565b151561202857600080fd5b6120328888611288565b151561203d57600080fd5b848061204e575061204d87610c8a565b5b61205957600061205c565b60015b60ff169250828660405180838152602001828152602001925050506040518091039020915061208b8888611c7f565b9050806000191682600019161415156120a357600080fd5b6120ad8888611b9f565b9350505050949350505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60a060405190810160405280600081526020016000815260200160008152602001600081526020016000815250905600a165627a7a72305820996d1dbf11f6632d1d8453492673af98f981f783f8563a13528e6469762ada1c0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x21BF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x213C DUP1 PUSH2 0x83 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x196 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x53E71A6 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x11FADEA3 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x2173A10F EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x2E9B12D0 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x32ED3D60 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x3B930294 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x427FA1D2 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x441C77C0 EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x49403183 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x5F4DA610 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x6CBF9C5E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x72D8E442 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x819B0293 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x88D21FF3 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x97508F36 EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0x97603560 EQ PUSH2 0x5B2 JUMPI DUP1 PUSH4 0xA1103F37 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xA25236FE EQ PUSH2 0x633 JUMPI DUP1 PUSH4 0xA4439DC5 EQ PUSH2 0x656 JUMPI DUP1 PUSH4 0xB11D8BB8 EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0xC622AFB0 EQ PUSH2 0x6C6 JUMPI DUP1 PUSH4 0xC9D983E6 EQ PUSH2 0x71C JUMPI DUP1 PUSH4 0xD1382092 EQ PUSH2 0x753 JUMPI DUP1 PUSH4 0xD901402B EQ PUSH2 0x7A9 JUMPI DUP1 PUSH4 0xD9548E53 EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0xDDB261B5 EQ PUSH2 0x842 JUMPI DUP1 PUSH4 0xE7B1D43C EQ PUSH2 0x879 JUMPI DUP1 PUSH4 0xE8CFA3F0 EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0xEE684830 EQ PUSH2 0x8D3 JUMPI DUP1 PUSH4 0xEE8BADD7 EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x978 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21C PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x430 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x486 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD58 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x534 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1370 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x56F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x13B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59C PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D3 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x144E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x615 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x654 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x15A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x677 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1876 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x706 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x793 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x828 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x84D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x863 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x89A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1D8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8BD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1F70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8F4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1FD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x962 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x200E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x983 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x98B PUSH2 0x20BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x9D8 DUP3 PUSH2 0x1FD2 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x9E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9EC DUP3 PUSH2 0xC8A JUMP JUMPDEST ISZERO PUSH2 0xA0F JUMPI PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0xA0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP5 TIMESTAMP ADD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP6 TIMESTAMP ADD ADD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH1 0x0 SLOAD PUSH32 0xEF096063D99F4EF9370B5E89D45025615C869845CA33878D173E8DCA429B2BE0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x30FE0A0A SWAP1 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xC1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC46 DUP3 PUSH2 0x13B4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC70 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1D62 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xC83 JUMPI POP PUSH2 0xC81 DUP3 PUSH2 0x1839 JUMP JUMPDEST ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC94 PUSH2 0x20E0 JUMP JUMPDEST PUSH2 0xC9D DUP4 PUSH2 0x1FD2 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xCA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD ADD DUP2 PUSH1 0x40 ADD MLOAD MUL DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x64 MUL GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD51 DUP3 PUSH2 0xD4C DUP5 PUSH2 0xB68 JUMP JUMPDEST PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD64 DUP7 PUSH2 0x1839 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0xDBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 EQ ISZERO ISZERO ISZERO PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0xDED JUMPI POP PUSH1 0x0 PUSH1 0x1 MUL PUSH2 0xDE6 CALLER DUP6 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x0 NOT AND EQ ISZERO JUMPDEST ISZERO ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x7D29AC9 SWAP1 SWAP2 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xEAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0xEB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP2 POP DUP6 DUP3 EQ PUSH2 0xED0 JUMPI DUP2 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x7D29AC9 SWAP1 SWAP2 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0xF8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP JUMPDEST SWAP2 POP PUSH2 0xFA8 DUP4 DUP4 CALLER DUP8 PUSH2 0x1370 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x9735C51B SWAP1 SWAP2 DUP6 DUP10 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1082 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x108F CALLER DUP8 PUSH2 0x153D JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH20 0x0 PUSH4 0x977AA031 SWAP1 SWAP2 DUP4 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E756D546F6B656E730000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x114F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x115C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x4 PUSH20 0x0 PUSH4 0x977AA031 SWAP1 SWAP2 DUP4 DUP9 PUSH1 0x1 SWAP1 DIV PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6D6D69744861736800000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x122E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1D1CE8842C4B2D0EAED42EB6D7732092CA85F0992CAE9C760D181EFCB0AEDF4E DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1293 DUP3 PUSH2 0x13B4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x129E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x366A5BA2 SWAP1 SWAP2 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x135D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x137F DUP6 DUP9 PUSH2 0x1B9F JUMP JUMPDEST DUP5 LT ISZERO SWAP2 POP PUSH2 0x138E DUP6 DUP8 PUSH2 0x1B9F JUMP JUMPDEST DUP5 GT ISZERO DUP1 PUSH2 0x139C JUMPI POP PUSH1 0x0 DUP7 EQ JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x13A8 JUMPI POP DUP1 JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 EQ DUP1 ISZERO PUSH2 0x13FC JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x1405 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1416 JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x141F JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 EQ DUP1 PUSH2 0x142E JUMPI POP PUSH1 0x0 DUP2 EQ JUMPDEST ISZERO PUSH2 0x143C JUMPI PUSH1 0x0 SWAP3 POP PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1457 DUP2 PUSH2 0x1FD2 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x146C CALLER DUP3 PUSH2 0x1288 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x1478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x6D900ED0 SWAP1 SWAP2 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x152A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x165D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 0x166A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x1681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1779 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 0x1786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP ISZERO ISZERO PUSH2 0x179B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4BDEC44A53FEB3AABEDF51C989FF2B6AEBE7369D3974F57C304758A8537281E1 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1844 DUP3 PUSH2 0x13B4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x184F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x186E PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1D62 JUMP JUMPDEST ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP5 PUSH2 0xC3B JUMP JUMPDEST ISZERO ISZERO PUSH2 0x188C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1896 CALLER DUP6 PUSH2 0x1288 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x18A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18AC CALLER DUP6 PUSH2 0x1C7F JUMP JUMPDEST PUSH1 0x0 NOT AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0x18DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18E8 CALLER DUP6 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x191C JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1941 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x6D900ED0 SWAP1 SWAP2 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x19F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7F9DF012DD015E7E61A4A17CCF8DB7FB6AFBE211465B5696368D1D6408D03311 DUP4 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A6E DUP6 PUSH2 0xB68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7A DUP6 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO ISZERO PUSH2 0x1B73 JUMPI PUSH2 0x1A91 DUP6 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1AA3 JUMPI DUP2 SWAP3 POP PUSH2 0x1B77 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x30FE0A0A SWAP1 SWAP2 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP2 POP PUSH2 0x1A7D JUMP JUMPDEST DUP2 SWAP3 POP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH20 0x0 PUSH4 0x50389F5C SWAP1 SWAP2 PUSH2 0x1BC9 DUP7 DUP7 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E756D546F6B656E730000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1C6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH20 0x0 PUSH4 0x50389F5C SWAP1 SWAP2 PUSH2 0x1CA9 DUP7 DUP7 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6D6D69744861736800000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1D40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1D4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP PUSH1 0x1 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D99 CALLER PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB SWAP1 POP DUP2 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1DEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1EAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 0x1EBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP ISZERO ISZERO PUSH2 0x1ED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2C88837E03C4EEE367D64FB379BBF7DAD76A371C52622230BCF8B79728B9C532 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7B DUP3 PUSH2 0x1FD2 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1F86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8F DUP3 PUSH2 0xC8A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1FB3 JUMPI PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH2 0x1FCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDD DUP3 PUSH2 0x13B4 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2007 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1D62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x201D DUP8 PUSH2 0x1FD2 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x2028 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2032 DUP9 DUP9 PUSH2 0x1288 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x203D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP1 PUSH2 0x204E JUMPI POP PUSH2 0x204D DUP8 PUSH2 0xC8A JUMP JUMPDEST JUMPDEST PUSH2 0x2059 JUMPI PUSH1 0x0 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 POP DUP3 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP2 POP PUSH2 0x208B DUP9 DUP9 PUSH2 0x1C7F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0x20A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20AD DUP9 DUP9 PUSH2 0x1B9F JUMP JUMPDEST SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP10 PUSH14 0x1DBF11F6632D1D8453492673AF98 0xf9 DUP2 0xf7 DUP4 0xf8 JUMP GASPRICE SGT MSTORE DUP15 PUSH5 0x69762ADA1C STOP 0x29 ","source":"pragma solidity ^0.4.19;\n\nimport \"./installed_contracts/tokens/contracts/eip20/EIP20.sol\";\nimport \"./installed_contracts/attrstore/contracts/AttributeStore.sol\";\nimport \"./installed_contracts/dll/contracts/DLL.sol\";\n\n/**\n@title Partial-Lock-Commit-Reveal Voting scheme with ERC20 tokens\n@author Team: Aspyn Palatnick, Cem Ozer, Yorke Rhodes\n*/\ncontract PLCRVoting {\n\n  // ============\n  // EVENTS:\n  // ============\n\n  event VoteCommitted(address indexed voter, uint indexed pollID, uint numTokens);\n  event VoteRevealed(address indexed voter, uint indexed pollID, uint numTokens, uint choice);\n  event PollCreated(uint voteQuorum, uint commitDuration, uint revealDuration, uint indexed pollID);\n  event VotingRightsGranted(address indexed voter, uint numTokens);\n  event VotingRightsWithdrawn(address indexed voter, uint numTokens);\n\n  // ============\n  // DATA STRUCTURES:\n  // ============\n\n  using AttributeStore for AttributeStore.Data;\n  using DLL for DLL.Data;\n\n  struct Poll {\n    uint commitEndDate;     /// expiration date of commit period for poll\n    uint revealEndDate;     /// expiration date of reveal period for poll\n    uint voteQuorum;\t    /// number of votes required for a proposal to pass\n    uint votesFor;\t\t    /// tally of votes supporting proposal\n    uint votesAgainst;      /// tally of votes countering proposal\n  }\n\n  // ============\n  // STATE VARIABLES:\n  // ============\n\n  uint constant public INITIAL_POLL_NONCE = 0;\n  uint public pollNonce;\n\n  mapping(uint => Poll) internal pollMap; // maps pollID to Poll struct\n\n  // --------\n  // Basic Poll Getters\n  // --------\n\n  function getPollCommitEndDate(uint _pollID) public view returns (uint) {\n    return pollMap[_pollID].commitEndDate;\n  }\n\n  function getPollRevealEndDate(uint _pollID) public view returns (uint) {\n    return pollMap[_pollID].revealEndDate;\n  }\n\n  function getPollVoteQuorum(uint _pollID) public view returns (uint) {\n    return pollMap[_pollID].voteQuorum;\n  }\n\n  function getPollVotesFor(uint _pollID) public view returns (uint) {\n    return pollMap[_pollID].votesFor;\n  }\n\n  function getPollVotesAgainst(uint _pollID) public view returns (uint) {\n    return pollMap[_pollID].votesAgainst;\n  }\n\n  mapping(address => uint) public voteTokenBalance; // maps user's address to voteToken balance\n\n  mapping(address => DLL.Data) dllMap;\n  AttributeStore.Data store;\n\n  EIP20 public token;\n\n  // ============\n  // CONSTRUCTOR:\n  // ============\n\n  /**\n  @dev Initializes voteQuorum, commitDuration, revealDuration, and pollNonce in addition to token contract and trusted mapping\n  @param _tokenAddr The address where the ERC20 token contract is deployed\n  */\n  function PLCRVoting(address _tokenAddr) public {\n    token = EIP20(_tokenAddr);\n    pollNonce = INITIAL_POLL_NONCE;\n  }\n\n  // ================\n  // TOKEN INTERFACE:\n  // ================\n\n  /**\n  @notice Loads _numTokens ERC20 tokens into the voting contract for one-to-one voting rights\n  @dev Assumes that msg.sender has approved voting contract to spend on their behalf\n  @param _numTokens The number of votingTokens desired in exchange for ERC20 tokens\n  */\n  function requestVotingRights(uint _numTokens) external {\n    require(token.balanceOf(msg.sender) >= _numTokens);\n    require(token.transferFrom(msg.sender, this, _numTokens));\n    voteTokenBalance[msg.sender] += _numTokens;\n    VotingRightsGranted(msg.sender, _numTokens);\n  }\n\n  /**\n  @notice Withdraw _numTokens ERC20 tokens from the voting contract, revoking these voting rights\n  @param _numTokens The number of ERC20 tokens desired in exchange for voting rights\n  */\n  function withdrawVotingRights(uint _numTokens) external {\n    uint availableTokens = voteTokenBalance[msg.sender] - getLockedTokens(msg.sender);\n    require(availableTokens >= _numTokens);\n    require(token.transfer(msg.sender, _numTokens));\n    voteTokenBalance[msg.sender] -= _numTokens;\n    VotingRightsWithdrawn(msg.sender, _numTokens);\n  }\n\n  /**\n  @dev Unlocks tokens locked in unrevealed vote where poll has ended\n  @param _pollID Integer identifier associated with the target poll\n  */\n  function rescueTokens(uint _pollID) external {\n    require(pollEnded(_pollID));\n    require(!hasBeenRevealed(msg.sender, _pollID));\n\n    dllMap[msg.sender].remove(_pollID);\n  }\n\n  // =================\n  // VOTING INTERFACE:\n  // =================\n\n  /**\n  @notice Commits vote using hash of choice and secret salt to conceal vote until reveal\n  @param _pollID Integer identifier associated with target poll\n  @param _secretHash Commit keccak256 hash of voter's choice and salt (tightly packed in this order)\n  @param _numTokens The number of tokens to be committed towards the target poll\n  @param _prevPollID The ID of the poll that the user has voted the maximum number of tokens in which is still less than or equal to numTokens\n  */\n  function commitVote(uint _pollID, bytes32 _secretHash, uint _numTokens, uint _prevPollID) external {\n    require(commitPeriodActive(_pollID));\n    require(voteTokenBalance[msg.sender] >= _numTokens); // prevent user from overspending\n    require(_pollID != 0);                // prevent user from committing to zero node placeholder\n\n    // TODO: Move all insert validation into the DLL lib\n    // Check if _prevPollID exists\n    require(_prevPollID == 0 || getCommitHash(msg.sender, _prevPollID) != 0);\n\n    uint nextPollID = dllMap[msg.sender].getNext(_prevPollID);\n\n    // if nextPollID is equal to _pollID, _pollID is being updated,\n    nextPollID = (nextPollID == _pollID) ? dllMap[msg.sender].getNext(_pollID) : nextPollID;\n\n    require(validPosition(_prevPollID, nextPollID, msg.sender, _numTokens));\n    dllMap[msg.sender].insert(_prevPollID, _pollID, nextPollID);\n\n    bytes32 uuid = attrUUID(msg.sender, _pollID);\n\n    store.setAttribute(uuid, \"numTokens\", _numTokens);\n    store.setAttribute(uuid, \"commitHash\", uint(_secretHash));\n\n    VoteCommitted(msg.sender, _pollID, _numTokens);\n  }\n\n  /**\n  @dev Compares previous and next poll's committed tokens for sorting purposes\n  @param _prevID Integer identifier associated with previous poll in sorted order\n  @param _nextID Integer identifier associated with next poll in sorted order\n  @param _voter Address of user to check DLL position for\n  @param _numTokens The number of tokens to be committed towards the poll (used for sorting)\n  @return valid Boolean indication of if the specified position maintains the sort\n  */\n  function validPosition(uint _prevID, uint _nextID, address _voter, uint _numTokens) public constant returns (bool valid) {\n    bool prevValid = (_numTokens >= getNumTokens(_voter, _prevID));\n    // if next is zero node, _numTokens does not need to be greater\n    bool nextValid = (_numTokens <= getNumTokens(_voter, _nextID) || _nextID == 0);\n    return prevValid && nextValid;\n  }\n\n  /**\n  @notice Reveals vote with choice and secret salt used in generating commitHash to attribute committed tokens\n  @param _pollID Integer identifier associated with target poll\n  @param _voteOption Vote choice used to generate commitHash for associated poll\n  @param _salt Secret number used to generate commitHash for associated poll\n  */\n  function revealVote(uint _pollID, uint _voteOption, uint _salt) external {\n    // Make sure the reveal period is active\n    require(revealPeriodActive(_pollID));\n    require(!hasBeenRevealed(msg.sender, _pollID));                        // prevent user from revealing multiple times\n    require(keccak256(_voteOption, _salt) == getCommitHash(msg.sender, _pollID)); // compare resultant hash from inputs to original commitHash\n\n    uint numTokens = getNumTokens(msg.sender, _pollID);\n\n    if (_voteOption == 1) { // apply numTokens to appropriate poll choice\n      pollMap[_pollID].votesFor += numTokens;\n    } else {\n      pollMap[_pollID].votesAgainst += numTokens;\n    }\n\n    dllMap[msg.sender].remove(_pollID); // remove the node referring to this vote upon reveal\n\n    VoteRevealed(msg.sender, _pollID, numTokens, _voteOption);\n  }\n\n  /**\n  @param _pollID Integer identifier associated with target poll\n  @param _salt Arbitrarily chosen integer used to generate secretHash\n  @return correctVotes Number of tokens voted for winning option\n  */\n  function getNumPassingTokens(address _voter, uint _pollID, uint _salt, bool _overturned) public constant returns (uint correctVotes) {\n    require(pollEnded(_pollID));\n    require(hasBeenRevealed(_voter, _pollID));\n\n    uint winningChoice = (_overturned || isPassed(_pollID)) ? 1 : 0;\n    bytes32 winnerHash = keccak256(winningChoice, _salt);\n    bytes32 commitHash = getCommitHash(_voter, _pollID);\n\n    require(winnerHash == commitHash);\n\n    return getNumTokens(_voter, _pollID);\n  }\n\n  // ==================\n  // POLLING INTERFACE:\n  // ==================\n\n  /**\n  @dev Initiates a poll with canonical configured parameters at pollID emitted by PollCreated event\n  @param _voteQuorum Type of majority (out of 100) that is necessary for poll to be successful\n  @param _commitDuration Length of desired commit period in seconds\n  @param _revealDuration Length of desired reveal period in seconds\n  */\n  function startPoll(uint _voteQuorum, uint _commitDuration, uint _revealDuration) public returns (uint pollID) {\n    pollNonce = pollNonce + 1;\n\n    pollMap[pollNonce] = Poll({\n      voteQuorum: _voteQuorum,\n      commitEndDate: block.timestamp + _commitDuration,\n      revealEndDate: block.timestamp + _commitDuration + _revealDuration,\n      votesFor: 0,\n      votesAgainst: 0\n    });\n\n    PollCreated(_voteQuorum, _commitDuration, _revealDuration, pollNonce);\n    return pollNonce;\n  }\n\n  /**\n  @notice Determines if proposal has passed\n  @dev Check if votesFor out of totalVotes exceeds votesQuorum (requires pollEnded)\n  @param _pollID Integer identifier associated with target poll\n  */\n  function isPassed(uint _pollID) constant public returns (bool passed) {\n    require(pollEnded(_pollID));\n\n    Poll memory poll = pollMap[_pollID];\n    return (100 * poll.votesFor) > (poll.voteQuorum * (poll.votesFor + poll.votesAgainst));\n  }\n\n  // ----------------\n  // POLLING HELPERS:\n  // ----------------\n\n  /**\n  @dev Gets the total winning votes for reward distribution purposes\n  @param _pollID Integer identifier associated with target poll\n  @return Total number of votes committed to the winning option for specified poll\n  */\n  function getTotalNumberOfTokensForWinningOption(uint _pollID) constant public returns (uint numTokens) {\n    require(pollEnded(_pollID));\n\n    if (isPassed(_pollID)) {\n      return pollMap[_pollID].votesFor;\n    }\n\n    return pollMap[_pollID].votesAgainst;\n  }\n\n  /**\n  @dev Gets the total winning votes for reward distribution purposes\n  @param _pollID Integer identifier associated with target poll\n  @return Total number of votes committed to the losing option for specified poll\n  */\n  function getTotalNumberOfTokensForLosingOption(uint _pollID) constant public returns (uint numTokens) {\n    require(pollEnded(_pollID));\n\n    if (!isPassed(_pollID)) {\n      return pollMap[_pollID].votesFor;\n    }\n\n    return pollMap[_pollID].votesAgainst;\n  }\n\n  /**\n  @notice Determines if poll is over\n  @dev Checks isExpired for specified poll's revealEndDate\n  @return Boolean indication of whether polling period is over\n  */\n  function pollEnded(uint _pollID) constant public returns (bool ended) {\n    require(pollExists(_pollID));\n\n    return isExpired(pollMap[_pollID].revealEndDate);\n  }\n\n  /**\n  @notice Checks if the commit period is still active for the specified poll\n  @dev Checks isExpired for the specified poll's commitEndDate\n  @param _pollID Integer identifier associated with target poll\n  @return Boolean indication of isCommitPeriodActive for target poll\n  */\n  function commitPeriodActive(uint _pollID) constant public returns (bool active) {\n    require(pollExists(_pollID));\n\n    return !isExpired(pollMap[_pollID].commitEndDate);\n  }\n\n  /**\n  @notice Checks if the reveal period is still active for the specified poll\n  @dev Checks isExpired for the specified poll's revealEndDate\n  @param _pollID Integer identifier associated with target poll\n  */\n  function revealPeriodActive(uint _pollID) constant public returns (bool active) {\n    require(pollExists(_pollID));\n\n    return !isExpired(pollMap[_pollID].revealEndDate) && !commitPeriodActive(_pollID);\n  }\n\n  /**\n  @dev Checks if user has already revealed for specified poll\n  @param _voter Address of user to check against\n  @param _pollID Integer identifier associated with target poll\n  @return Boolean indication of whether user has already revealed\n  */\n  function hasBeenRevealed(address _voter, uint _pollID) constant public returns (bool revealed) {\n    require(pollExists(_pollID));\n\n    return !dllMap[_voter].contains(_pollID);\n  }\n\n  /**\n  @dev Checks if a poll exists, throws if the provided poll is in an impossible state\n  @param _pollID The pollID whose existance is to be evaluated.\n  @return Boolean Indicates whether a poll exists for the provided pollID\n  */\n  function pollExists(uint _pollID) constant public returns (bool exists) {\n    uint commitEndDate = pollMap[_pollID].commitEndDate;\n    uint revealEndDate = pollMap[_pollID].revealEndDate;\n\n    assert(!(commitEndDate == 0 && revealEndDate != 0));\n    assert(!(commitEndDate != 0 && revealEndDate == 0));\n\n    if (commitEndDate == 0 || revealEndDate == 0) {\n      return false;\n    }\n    return true;\n  }\n\n  // ---------------------------\n  // DOUBLE-LINKED-LIST HELPERS:\n  // ---------------------------\n\n  /**\n  @dev Gets the bytes32 commitHash property of target poll\n  @param _voter Address of user to check against\n  @param _pollID Integer identifier associated with target poll\n  @return Bytes32 hash property attached to target poll\n  */\n  function getCommitHash(address _voter, uint _pollID) constant public returns (bytes32 commitHash) {\n    return bytes32(store.getAttribute(attrUUID(_voter, _pollID), \"commitHash\"));\n  }\n\n  /**\n  @dev Wrapper for getAttribute with attrName=\"numTokens\"\n  @param _voter Address of user to check against\n  @param _pollID Integer identifier associated with target poll\n  @return Number of tokens committed to poll in sorted poll-linked-list\n  */\n  function getNumTokens(address _voter, uint _pollID) constant public returns (uint numTokens) {\n    return store.getAttribute(attrUUID(_voter, _pollID), \"numTokens\");\n  }\n\n  /**\n  @dev Gets top element of sorted poll-linked-list\n  @param _voter Address of user to check against\n  @return Integer identifier to poll with maximum number of tokens committed to it\n  */\n  function getLastNode(address _voter) constant public returns (uint pollID) {\n    return dllMap[_voter].getPrev(0);\n  }\n\n  /**\n  @dev Gets the numTokens property of getLastNode\n  @param _voter Address of user to check against\n  @return Maximum number of tokens committed in poll specified\n  */\n  function getLockedTokens(address _voter) constant public returns (uint numTokens) {\n    return getNumTokens(_voter, getLastNode(_voter));\n  }\n\n  /**\n  @dev Gets the prevNode a new node should be inserted after given the sort factor\n  @param _voter The voter whose DLL will be searched\n  @param _numTokens The value for the numTokens attribute in the node to be inserted\n  @return the node which the propoded node should be inserted after\n  */\n  function getInsertPointForNumTokens(\n    address _voter,\n    uint _numTokens)\n    constant public returns (uint prevNode)\n  {\n    uint nodeID = getLastNode(_voter);\n    uint tokensInNode = getNumTokens(_voter, nodeID);\n\n    while (tokensInNode != 0) {\n      tokensInNode = getNumTokens(_voter, nodeID);\n      if (tokensInNode < _numTokens) {\n        return nodeID;\n      }\n      nodeID = dllMap[_voter].getPrev(nodeID);\n    }\n\n    return nodeID;\n  }\n\n  // ----------------\n  // GENERAL HELPERS:\n  // ----------------\n\n  /**\n  @dev Checks if an expiration date has been reached\n  @param _terminationDate Integer timestamp of date to compare current timestamp with\n  @return expired Boolean indication of whether the terminationDate has passed\n  */\n  function isExpired(uint _terminationDate) constant public returns (bool expired) {\n    return (block.timestamp > _terminationDate);\n  }\n\n  /**\n  @dev Generates an identifier which associates a user and a poll together\n  @param _pollID Integer identifier associated with target poll\n  @return UUID Hash which is deterministic from _user and _pollID\n  */\n  function attrUUID(address _user, uint _pollID) public pure returns (bytes32 uuid) {\n    return keccak256(_user, _pollID);\n  }\n}\n","abiDocs":[{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getTotalNumberOfTokensForWinningOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the total winning votes for reward distribution purposes","return":"Total number of votes committed to the winning option for specified poll","fileLineNumber":270,"signature":"getTotalNumberOfTokensForWinningOption(uint256)","signatureHash":"053e71a6"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollVotesFor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":63,"signature":"getPollVotesFor(uint256)","signatureHash":"11fadea3"},{"constant":true,"inputs":[],"name":"INITIAL_POLL_NONCE","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":42,"signature":"INITIAL_POLL_NONCE()","signatureHash":"2173a10f"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollVotesAgainst","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":67,"signature":"getPollVotesAgainst(uint256)","signatureHash":"2e9b12d0"},{"constant":false,"inputs":[{"name":"_voteQuorum","type":"uint256","description":"Type of majority (out of 100) that is necessary for poll to be successful"},{"name":"_commitDuration","type":"uint256","description":"Length of desired commit period in seconds"},{"name":"_revealDuration","type":"uint256","description":"Length of desired reveal period in seconds"}],"name":"startPoll","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Initiates a poll with canonical configured parameters at pollID emitted by PollCreated event","fileLineNumber":234,"signature":"startPoll(uint256,uint256,uint256)","signatureHash":"32ed3d60"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"voteTokenBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":71,"signature":"voteTokenBalance(address)","signatureHash":"3b930294"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"}],"name":"getLastNode","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets top element of sorted poll-linked-list","return":"Integer identifier to poll with maximum number of tokens committed to it","fileLineNumber":388,"signature":"getLastNode(address)","signatureHash":"427fa1d2"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"revealPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks isExpired for the specified poll's revealEndDate","notice":"Checks if the reveal period is still active for the specified poll","fileLineNumber":323,"signature":"revealPeriodActive(uint256)","signatureHash":"441c77c0"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"isPassed","outputs":[{"name":"passed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Check if votesFor out of totalVotes exceeds votesQuorum (requires pollEnded)","notice":"Determines if proposal has passed","fileLineNumber":254,"signature":"isPassed(uint256)","signatureHash":"49403183"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollVoteQuorum","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":59,"signature":"getPollVoteQuorum(uint256)","signatureHash":"5f4da610"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"}],"name":"getLockedTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the numTokens property of getLastNode","return":"Maximum number of tokens committed in poll specified","fileLineNumber":397,"signature":"getLockedTokens(address)","signatureHash":"6b2d95d4"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"},{"name":"_secretHash","type":"bytes32","description":"Commit keccak256 hash of voter's choice and salt (tightly packed in this order)"},{"name":"_numTokens","type":"uint256","description":"The number of tokens to be committed towards the target poll"},{"name":"_prevPollID","type":"uint256","description":"The ID of the poll that the user has voted the maximum number of tokens in which is still less than or equal to numTokens"}],"name":"commitVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"Commits vote using hash of choice and secret salt to conceal vote until reveal","fileLineNumber":141,"signature":"commitVote(uint256,bytes32,uint256,uint256)","signatureHash":"6cbf9c5e"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"hasBeenRevealed","outputs":[{"name":"revealed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks if user has already revealed for specified poll","return":"Boolean indication of whether user has already revealed","fileLineNumber":335,"signature":"hasBeenRevealed(address,uint256)","signatureHash":"72d8e442"},{"constant":true,"inputs":[{"name":"_prevID","type":"uint256","description":"Integer identifier associated with previous poll in sorted order"},{"name":"_nextID","type":"uint256","description":"Integer identifier associated with next poll in sorted order"},{"name":"_voter","type":"address","description":"Address of user to check DLL position for"},{"name":"_numTokens","type":"uint256","description":"The number of tokens to be committed towards the poll (used for sorting)"}],"name":"validPosition","outputs":[{"name":"valid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Compares previous and next poll's committed tokens for sorting purposes","return":"valid Boolean indication of if the specified position maintains the sort","fileLineNumber":174,"signature":"validPosition(uint256,uint256,address,uint256)","signatureHash":"819b0293"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"The pollID whose existance is to be evaluated."}],"name":"pollExists","outputs":[{"name":"exists","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks if a poll exists, throws if the provided poll is in an impossible state","return":"Boolean Indicates whether a poll exists for the provided pollID","fileLineNumber":346,"signature":"pollExists(uint256)","signatureHash":"88d21ff3"},{"constant":true,"inputs":[],"name":"pollNonce","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":43,"signature":"pollNonce()","signatureHash":"97508f36"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with the target poll"}],"name":"rescueTokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Unlocks tokens locked in unrevealed vote where poll has ended","fileLineNumber":123,"signature":"rescueTokens(uint256)","signatureHash":"97603560"},{"constant":true,"inputs":[{"name":"_user","type":"address"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"attrUUID","outputs":[{"name":"uuid","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function","details":"Generates an identifier which associates a user and a poll together","return":"UUID Hash which is deterministic from _user and _pollID","fileLineNumber":444,"signature":"attrUUID(address,uint256)","signatureHash":"a1103f37"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256","description":"The number of votingTokens desired in exchange for ERC20 tokens"}],"name":"requestVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Assumes that msg.sender has approved voting contract to spend on their behalf","notice":"Loads _numTokens ERC20 tokens into the voting contract for one-to-one voting rights","fileLineNumber":100,"signature":"requestVotingRights(uint256)","signatureHash":"a25236fe"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"commitPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks isExpired for the specified poll's commitEndDate","return":"Boolean indication of isCommitPeriodActive for target poll","notice":"Checks if the commit period is still active for the specified poll","fileLineNumber":312,"signature":"commitPeriodActive(uint256)","signatureHash":"a4439dc5"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"},{"name":"_voteOption","type":"uint256","description":"Vote choice used to generate commitHash for associated poll"},{"name":"_salt","type":"uint256","description":"Secret number used to generate commitHash for associated poll"}],"name":"revealVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"Reveals vote with choice and secret salt used in generating commitHash to attribute committed tokens","fileLineNumber":187,"signature":"revealVote(uint256,uint256,uint256)","signatureHash":"b11d8bb8"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"The voter whose DLL will be searched"},{"name":"_numTokens","type":"uint256","description":"The value for the numTokens attribute in the node to be inserted"}],"name":"getInsertPointForNumTokens","outputs":[{"name":"prevNode","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the prevNode a new node should be inserted after given the sort factor","return":"the node which the propoded node should be inserted after","fileLineNumber":407,"signature":"getInsertPointForNumTokens(address,uint256)","signatureHash":"c622afb0"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollRevealEndDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":55,"signature":"getPollRevealEndDate(uint256)","signatureHash":"c9d983e6"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getNumTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Wrapper for getAttribute with attrName=\"numTokens\"","return":"Number of tokens committed to poll in sorted poll-linked-list","fileLineNumber":379,"signature":"getNumTokens(address,uint256)","signatureHash":"d1382092"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getCommitHash","outputs":[{"name":"commitHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the bytes32 commitHash property of target poll","return":"Bytes32 hash property attached to target poll","fileLineNumber":369,"signature":"getCommitHash(address,uint256)","signatureHash":"d901402b"},{"constant":true,"inputs":[{"name":"_terminationDate","type":"uint256","description":"Integer timestamp of date to compare current timestamp with"}],"name":"isExpired","outputs":[{"name":"expired","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks if an expiration date has been reached","return":"expired Boolean indication of whether the terminationDate has passed","fileLineNumber":435,"signature":"isExpired(uint256)","signatureHash":"d9548e53"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getPollCommitEndDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":51,"signature":"getPollCommitEndDate(uint256)","signatureHash":"ddb261b5"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256","description":"The number of ERC20 tokens desired in exchange for voting rights"}],"name":"withdrawVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"Withdraw _numTokens ERC20 tokens from the voting contract, revoking these voting rights","fileLineNumber":111,"signature":"withdrawVotingRights(uint256)","signatureHash":"e7b1d43c"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getTotalNumberOfTokensForLosingOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the total winning votes for reward distribution purposes","return":"Total number of votes committed to the losing option for specified poll","fileLineNumber":285,"signature":"getTotalNumberOfTokensForLosingOption(uint256)","signatureHash":"e8cfa3f0"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"pollEnded","outputs":[{"name":"ended","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks isExpired for specified poll's revealEndDate","return":"Boolean indication of whether polling period is over","notice":"Determines if poll is over","fileLineNumber":300,"signature":"pollEnded(uint256)","signatureHash":"ee684830"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"},{"name":"_salt","type":"uint256","description":"Arbitrarily chosen integer used to generate secretHash"},{"name":"_overturned","type":"bool"}],"name":"getNumPassingTokens","outputs":[{"name":"correctVotes","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","return":"correctVotes Number of tokens voted for winning option","fileLineNumber":211,"signature":"getNumPassingTokens(address,uint256,uint256,bool)","signatureHash":"ee8badd7"},{"constant":true,"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":76,"signature":"token()","signatureHash":"fc0c546a"},{"inputs":[{"name":"_tokenAddr","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor","fileLineNumber":86},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"}],"name":"VoteCommitted","type":"event","fileLineNumber":17,"signature":"VoteCommitted(address,uint256,uint256)","signatureHash":"1d1ce884"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":false,"name":"choice","type":"uint256"}],"name":"VoteRevealed","type":"event","fileLineNumber":18,"signature":"VoteRevealed(address,uint256,uint256,uint256)","signatureHash":"7f9df012"},{"anonymous":false,"inputs":[{"indexed":false,"name":"voteQuorum","type":"uint256"},{"indexed":false,"name":"commitDuration","type":"uint256"},{"indexed":false,"name":"revealDuration","type":"uint256"},{"indexed":true,"name":"pollID","type":"uint256"}],"name":"PollCreated","type":"event","fileLineNumber":19,"signature":"PollCreated(uint256,uint256,uint256,uint256)","signatureHash":"ef096063"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":false,"name":"numTokens","type":"uint256"}],"name":"VotingRightsGranted","type":"event","fileLineNumber":20,"signature":"VotingRightsGranted(address,uint256)","signatureHash":"4bdec44a"},{"anonymous":false,"inputs":[{"indexed":true,"name":"voter","type":"address"},{"indexed":false,"name":"numTokens","type":"uint256"}],"name":"VotingRightsWithdrawn","type":"event","fileLineNumber":21,"signature":"VotingRightsWithdrawn(address,uint256)","signatureHash":"2c88837e"}]}
